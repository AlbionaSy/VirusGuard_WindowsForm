<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA0dJREFUWEftmFuITVEcxsekMZgihZQHl7y45oEnl8KboRS5JE8SasI8EB4MSh4k
        SSgPE5IMSjwhSXmSIkUKKSMScss9lt931rePMebss8+ZM8zD/Opr9vnW9/+vZcbaZ+1d1UMPGQghDEJr
        0RV0Ea1EAzz8f2AB1WgOOoY+ovZ8Ri1oHurtsq6HycajPeg5SniPmtFcS9fyEp6i3Wis21QWGg9Eq9B1
        lPAD6bP8Okfz4NWiRegC+o4S7qJNaLCj5UOTenQWfUUJ99BmNNyxoijrGtUmfEFnUL1jpUHhUnUxr9EB
        NNXDBSGzAC1GfW39gXog9VLPhGUezg5F62Nt2I9qbBeF7LdcVQhv0RE0HfXycB68GqTeYr3t7Kgo1pZW
        7Jr2PEHaJGMcy8HnsubIoaJYW5EFJvxETY52ywWKq452eoENsTY02sqEa9K44qiyjdEKDbayQ9GKWPv7
        T5IF16RxzlFld0QrLLeVHYrmx9qwz1YmXJPGMUeVTXbxPFvZoWhGrA3HbWXCNWm03SQnohWm2coORUNj
        bbhlKxOuSWOJo8reiVYYaqs0KHyGdOOttVUUzVaEUc71QerdmissB4r1RS+m2CqK84V46Jhy+soT522V
        DsU6dYjttorifCH2OqbczmiFjbZKh+KRSHf/+7aKohlTmOiYcsnJZrSt8qDBzdgnTLCVirMdcc0RZSZF
        K9ywVT402RB7haO2UnG2I2Y6ooweE8Q6W+VDkzr0CmnHjbBdEDIdkd8IXI9AOmG/RP1tdw4abUWi2VZB
        nGuLzoX50zfXel4RW2x1HpoNQC+QNsws2x3CeFuUb3tjnm1PvSr7WEpDPQCJB6if7b+IkTy7bMvvhx7l
        3BAW2q4sND4d+4eT6K9jvMDXb0gcRrmMfqJTMqElF+wKaD4EPc5NE8I223+Avw/pJpz/B3DdhIRqO/+4
        mQYTjENvkH5Tq20XhMwaZ1XTNQ/u7WEi/WdPnpUL7kbGkt2vbOrmqjhMqPcy7zQ7HET5E4+u0SENgDJz
        PPRvYWK9p2nVKkCvNPQVNhbdlgE6rk12/P/AAvRa47JWA3qjJYlLKPPrkS6Fheg2opdIH9AnpGNatYe7
        DyxqmOSPPfRQnKqqXwajJOb0b5gyAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="guna2PictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA0dJREFUWEftmFuITVEcxsekMZgihZQHl7y45oEnl8KboRS5JE8SasI8EB4MSh4k
        SSgPE5IMSjwhSXmSIkUKKSMScss9lt931rePMebss8+ZM8zD/Opr9vnW9/+vZcbaZ+1d1UMPGQghDEJr
        0RV0Ea1EAzz8f2AB1WgOOoY+ovZ8Ri1oHurtsq6HycajPeg5SniPmtFcS9fyEp6i3Wis21QWGg9Eq9B1
        lPAD6bP8Okfz4NWiRegC+o4S7qJNaLCj5UOTenQWfUUJ99BmNNyxoijrGtUmfEFnUL1jpUHhUnUxr9EB
        NNXDBSGzAC1GfW39gXog9VLPhGUezg5F62Nt2I9qbBeF7LdcVQhv0RE0HfXycB68GqTeYr3t7Kgo1pZW
        7Jr2PEHaJGMcy8HnsubIoaJYW5EFJvxETY52ywWKq452eoENsTY02sqEa9K44qiyjdEKDbayQ9GKWPv7
        T5IF16RxzlFld0QrLLeVHYrmx9qwz1YmXJPGMUeVTXbxPFvZoWhGrA3HbWXCNWm03SQnohWm2coORUNj
        bbhlKxOuSWOJo8reiVYYaqs0KHyGdOOttVUUzVaEUc71QerdmissB4r1RS+m2CqK84V46Jhy+soT522V
        DsU6dYjttorifCH2OqbczmiFjbZKh+KRSHf/+7aKohlTmOiYcsnJZrSt8qDBzdgnTLCVirMdcc0RZSZF
        K9ywVT402RB7haO2UnG2I2Y6ooweE8Q6W+VDkzr0CmnHjbBdEDIdkd8IXI9AOmG/RP1tdw4abUWi2VZB
        nGuLzoX50zfXel4RW2x1HpoNQC+QNsws2x3CeFuUb3tjnm1PvSr7WEpDPQCJB6if7b+IkTy7bMvvhx7l
        3BAW2q4sND4d+4eT6K9jvMDXb0gcRrmMfqJTMqElF+wKaD4EPc5NE8I223+Avw/pJpz/B3DdhIRqO/+4
        mQYTjENvkH5Tq20XhMwaZ1XTNQ/u7WEi/WdPnpUL7kbGkt2vbOrmqjhMqPcy7zQ7HET5E4+u0SENgDJz
        PPRvYWK9p2nVKkCvNPQVNhbdlgE6rk12/P/AAvRa47JWA3qjJYlLKPPrkS6Fheg2opdIH9AnpGNatYe7
        DyxqmOSPPfRQnKqqXwajJOb0b5gyAAAAAElFTkSuQmCC
</value>
  </data>
</root>